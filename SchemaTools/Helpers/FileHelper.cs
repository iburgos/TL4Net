using System.IO;
using System.Reflection;
using System.Threading;

namespace Telegram4Net.SchemaTools.Helpers
{
    public class FileHelper
    {
        private const string DOMAIN_FOLDER = "Domain\\TL\\AutoGenerated";

        public static void CleanFolder()
        {
            string directoryName = $"{RootFolder}\\{DOMAIN_FOLDER}";
            if (Directory.Exists(directoryName))
                Directory.Delete(directoryName, recursive: true);
        }

        public static FileStream CreateFile(string path)
        {
            string directoryName = Path.GetDirectoryName(path);

            if (!Directory.Exists(directoryName))
                Directory.CreateDirectory(directoryName);

            if (File.Exists(path))
            {
                File.Delete(path);
                Thread.Sleep(20);
            }

            return File.OpenWrite(path);
        }

        public static string GetFolderName(string type)
        {
            string domain = NameHelper.GetDomainFromType(type);
            return domain == string.Empty ? $"{RootFolder}\\{DOMAIN_FOLDER}" : $"{RootFolder}\\{DOMAIN_FOLDER}\\{NameHelper.Capitalize(domain)}";
        }

        public static string RootFolder => GetParent(AssemblyLocation, Constants.SolutionFolderName);

        public static string AssemblyFolder => Directory.GetParent(AssemblyLocation).FullName;

        private static string AssemblyLocation => Assembly.GetExecutingAssembly().Location;

        private static string GetParent(string path, string parentName)
        {
            while (true)
            {
                var dir = new DirectoryInfo(path);

                if (dir.Parent == null)
                    return null;

                if (dir.Parent.Name == parentName)
                    return dir.Parent.FullName;

                path = dir.Parent.FullName;
            }
        }
    }
}